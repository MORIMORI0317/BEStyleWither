plugins {
    id 'com.github.johnrengelman.shadow'
    id 'net.darkhax.curseforgegradle' version '1.1.25'
    id "com.modrinth.minotaur" version '2.8.7'
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    modImplementation "net.fabricmc:fabric-loader:$rootProject.fabric_loader_version"

    modImplementation "net.fabricmc.fabric-api:fabric-api:$rootProject.fabric_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionFabric')

    modApi "me.shedaniel.cloth:cloth-config-fabric:15.0.140"
    modApi "com.terraformersmc:modmenu:11.0.2"
}

processResources {
    inputs.property 'version', project.version

    filesMatching('fabric.mod.json') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile

    archiveClassifier.set(null)
    setArchivesBaseName("${rootProject.mod_id}-${project.name}-mc${rootProject.minecraft_version}")
}

def mainJar = file("${project.layout.buildDirectory.get().asFile}/libs/${rootProject.mod_id}-${project.name}-mc${rootProject.minecraft_version}-${project.mod_version}.jar")
def sourcesJar = file("${project.layout.buildDirectory.get().asFile}/libs/${rootProject.mod_id}-${project.name}-mc${rootProject.minecraft_version}-${project.mod_version}-sources.jar")
def changeLogFile = file('../LATEST_CHANGELOG.md')
def uploadMainName = "${rootProject.archives_name}-${rootProject.minecraft_version}-${project.mod_version}-Fabric"
def uploadSourcesName = "${rootProject.archives_name}-${rootProject.minecraft_version}-${project.mod_version}-Fabric-sources"

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    if (System.getenv('curesforgeapikey') != null && "${project.curesforge_id}" != '') {
        apiToken = System.getenv('curesforgeapikey')

        def mainFile = upload(findProperty('curesforge_id'), mainJar)
        mainFile.changelogType = 'markdown'
        mainFile.changelog = changeLogFile.text
        mainFile.releaseType = "${project.release_type}"
        mainFile.displayName = uploadMainName

        project.support_versions.split(",").each {
            String version -> mainFile.addGameVersion(version)
        }

        mainFile.addJavaVersion('Java 21')

        mainFile.addModLoader('Fabric')
        mainFile.addModLoader('Quilt')

        mainFile.addGameVersion('Client')
        mainFile.addGameVersion('Server')

        mainFile.addRequirement("fabric-api")
        mainFile.addOptional("cloth-config")

        def sourcesFile = mainFile.withAdditionalFile(sourcesJar)
        sourcesFile.displayName = uploadSourcesName
    }
}

if (System.getenv('modrinthapikey') != null && "${modrinth_id}" != '') {
    modrinth {
        token = System.getenv('modrinthapikey')
        projectId = "${project.modrinth_id}"
        versionName = uploadMainName
        versionNumber = "${project.minecraft_version}-${project.mod_version}-Fabric"
        versionType = "${project.release_type}"
        uploadFile = mainJar
        gameVersions = List.of(project.support_versions.split(","))
        loaders = ["fabric", "quilt"]
        dependencies {
            required.project("P7dR8mSH") //Fabric API
            optional.project("9s6osm5g") //Cloth Config API
        }
        changelog = changeLogFile.text
    }
}
