plugins {
    id 'com.github.johnrengelman.shadow'
    id 'net.darkhax.curseforgegradle' version '1.1.25'
    id "com.modrinth.minotaur" version '2.8.7'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    modImplementation "dev.architectury:architectury-neoforge:$rootProject.architectury_api_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile

    archiveClassifier.set(null)
    setArchivesBaseName("${rootProject.mod_id}-${project.name}-mc${rootProject.minecraft_version}")
}

def mainJar = file("${project.layout.buildDirectory.get().asFile}/libs/${rootProject.mod_id}-${project.name}-mc${rootProject.minecraft_version}-${project.mod_version}.jar")
def sourcesJar = file("${project.layout.buildDirectory.get().asFile}/libs/${rootProject.mod_id}-${project.name}-mc${rootProject.minecraft_version}-${project.mod_version}-sources.jar")
def changeLogFile = file('../LATEST_CHANGELOG.md')
def uploadMainName = "${rootProject.archives_name}-${rootProject.minecraft_version}-${project.mod_version}-NeoForge"
def uploadSourcesName = "${rootProject.archives_name}-${rootProject.minecraft_version}-${project.mod_version}-NeoForge-sources"

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    if (System.getenv('curesforgeapikey') != null && "${project.curesforge_id}" != '') {
        apiToken = System.getenv('curesforgeapikey')

        def mainFile = upload(findProperty('curesforge_id'), mainJar)
        mainFile.changelogType = 'markdown'
        mainFile.changelog = changeLogFile.text
        mainFile.releaseType = "${project.release_type}"
        mainFile.displayName = uploadMainName

        project.support_versions.split(",").each {
            String version -> mainFile.addGameVersion(version)
        }
        mainFile.addJavaVersion('Java 17')
        mainFile.addModLoader('NeoForge')
        mainFile.addGameVersion('Client')
        mainFile.addGameVersion('Server')

        def sourcesFile = mainFile.withAdditionalFile(sourcesJar)
        sourcesFile.displayName = uploadSourcesName
    }
}

if (System.getenv('modrinthapikey') != null && "${modrinth_id}" != '') {
    modrinth {
        token = System.getenv('modrinthapikey')
        projectId = "${rootProject.modrinth_id}"
        versionName = uploadMainName
        versionNumber = "${rootProject.minecraft_version}-${project.mod_version}-NeoForge"
        versionType = "${project.release_type}"
        uploadFile = mainJar
        gameVersions = List.of(project.support_versions.split(","))
        loaders = ["neoforge"]
        changelog = changeLogFile.text
    }
}

